i32 cuvinte:

(
)
"(mai apare pentru ca dupa el urma o paranteza)

keywords:
module
func
export
param
result
i32

functii apelate:
"add"
"sub"
"mul"
"div_s"
"div_u"
"rem_s"
"rem_u"
"and"
"or" 
"xor"
"shl"
"shr_s"
"shr_u"
"rotl"
"rotr"
"clz"
"ctz"
"popcnt"
"extend8_s"
"extend16_s"
"eqz" 
"eq"
"ne"
"lt_s"
"lt_u"
"le_s" 
"le_u"
"gt_s"
"gt_u"
"ge_s"
"ge_u"
i32.add 
i32.sub
i32.mul
i32.div_s 
i32.div_u
i32.rem_s
i32.rem_u
i32.and
i32.or
i32.xor
i32.shl
i32.shr_s
i32.shr_u
i32.rotl
i32.rotr
i32.clz
i32.ctz
i32.popcnt
i32.extend8_s 
i32.extend16_s
i32.eqz
i32.eq 
i32.ne 
i32.lt_s
i32.lt_u
i32.le_s
i32.le_u
i32.gt_s
i32.gt_u
i32.ge_s
i32.ge_u
local.get


constante:
i32.const
i64.const(folosit doar in assert_invalid)
f32.const(folosit doar in assert_invalid)

alias-uri:
	cuvinte/functii:
		$x
		$y
		$f(folosit doar in assert_invalid)
		$sig(folosit doar in assert_invalid)

	functii cu alias specifice assert_invalid:
		$type-unary-operand-empty
		$type-unary-operand-empty-in-block
		$type-unary-operand-empty-in-loop
		$type-unary-operand-empty-in-if
		$type-unary-operand-empty-in-else
		$type-unary-operand-empty-in-br
		$type-unary-operand-empty-in-br_if
		$type-unary-operand-empty-in-br_table
		$type-unary-operand-empty-in-return
		$type-unary-operand-empty-in-select
		$type-unary-operand-empty-in-call
		$type-unary-operand-empty-in-call_indirect
		$type-unary-operand-empty-in-local.set
		$type-unary-operand-empty-in-local.tee
		$type-unary-operand-empty-in-global.set
		$type-unary-operand-empty-in-memory.grow
		$type-unary-operand-empty-in-load
		$type-unary-operand-empty-in-store
		$type-binary-1st-operand-empty
		$type-binary-2nd-operand-empty
		$type-binary-1st-operand-empty-in-block
		$type-binary-2nd-operand-empty-in-block
		$type-binary-1st-operand-empty-in-loop
		$type-binary-2nd-operand-empty-in-loop
		$type-binary-1st-operand-empty-in-if
		$type-binary-2nd-operand-empty-in-if
		$type-binary-1st-operand-empty-in-else
		$type-binary-2nd-operand-empty-in-else
		$type-binary-1st-operand-empty-in-br
		$type-binary-2nd-operand-empty-in-br
		$type-binary-1st-operand-empty-in-br_if
		$type-binary-2nd-operand-empty-in-br_if
		$type-binary-1st-operand-empty-in-br_table
		$type-binary-2nd-operand-empty-in-br_table
		$type-binary-1st-operand-empty-in-return
		$type-binary-2nd-operand-empty-in-return
		$type-binary-1st-operand-empty-in-select
		$type-binary-2nd-operand-empty-in-select
		$type-binary-1st-operand-empty-in-call
		$type-binary-2nd-operand-empty-in-call
		$type-binary-1st-operand-empty-in-call_indirect
		$type-binary-2nd-operand-empty-in-call_indirect
		$type-binary-1st-operand-empty-in-local.set
		$type-binary-2nd-operand-empty-in-local.set
		$type-binary-1st-operand-empty-in-local.tee
		$type-binary-2nd-operand-empty-in-local.tee
		$type-binary-1st-operand-empty-in-global.set
		$type-binary-2nd-operand-empty-in-global.set
		$type-binary-1st-operand-empty-in-memory.grow
		$type-binary-2nd-operand-empty-in-memory.grow
		$type-binary-1st-operand-empty-in-load
		$type-binary-2nd-operand-empty-in-load
		$type-binary-1st-operand-empty-in-store
		$type-binary-2nd-operand-empty-in-store


numere intregi in baza 10: -1 -2 1 2 0
numere in baza 16(probabil intregi): 0x7fffffff 0x80000000 0x3fffffff
nu stiu ce fel de numere sunt astea: 0xfedc_8000


assert-uri:
assert_return
assert_invalid
assert_trap 
assert_malformed

specific assert_return:
invoke

specific assert_invalid:
"type mismatch"
drop
block
loop
if
then
else
br
br_if
br_table
return
select
call
type
table
funcref
elem
call_indirect
local
local.set
local.tee
global
mut
global.set
global.get
memory
memory.grow
i32.load
i32.store

specific assert_trap:
invoke
"integer overflow"
"integer divide by zero"

specific assert_malformed:
quote
"unexpected token"
nan:arithmetic
nan:canonical
