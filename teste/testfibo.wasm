(module
	(func $fibo (param $n i32) (result i32)
		(if (result i32) (i32.le_s (local.get $n) (i32.const 1))
		(then 
			local.get $n
		)
		(else 
			i32.add
				(call $fibo (i32.sub (local.get $n) (i32.const 1)))
				(call $fibo (i32.sub (local.get $n) (i32.const 2)))
		))
	)
	
	(print)
	(call $fibo (i32.const 0))
	(print)
	(call $fibo (i32.const 1))
	(print)
	(call $fibo (i32.const 2))
	(print)
	(call $fibo (i32.const 3))
	(print)
	(call $fibo (i32.const 4))
	(print)
	(call $fibo (i32.const 5))
	(print)
	(call $fibo (i32.const 6))
	(print)
	(call $fibo (i32.const 7))
	(print)
	(call $fibo (i32.const 8))
	(print)
	(call $fibo (i32.const 9))
	(print)
	(call $fibo (i32.const 10))
	(print)
	(call $fibo (i32.const 11))
	(print)
	(call $fibo (i32.const 12))
	(print)
	(call $fibo (i32.const 13))
	(print)
	(call $fibo (i32.const 14))
	(print)
	(call $fibo (i32.const 15))
	(print)
	(call $fibo (i32.const 16))
	(print)
	(call $fibo (i32.const 17))
	(print)
	(call $fibo (i32.const 18))
	(print)
	(call $fibo (i32.const 19))
	(print)
	(call $fibo (i32.const 20))
	(print)
	(call $fibo (i32.const 21))
	(print)
)